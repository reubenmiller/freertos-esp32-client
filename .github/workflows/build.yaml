name: build
permissions:
  contents: write
on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:
  info:
    name: Build information
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.info.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: taiki-e/install-action@just
      - id: info
        name: Get Version
        run: |
          case "${GITHUB_REF}" in
            refs/tags/*)
              version="${GITHUB_REF#refs/*/}"
              echo "Using version from tag: $version"
              ;;
            *)
              version="$(just version)"
              echo "Using version from timestamp: $version"
              ;;
          esac
          echo "version=$version" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    needs:
      - info
    strategy:
      fail-fast: false
      matrix:
        # Note: Targets which requires a non-default rust_channel
        # then they should not be included in the .target list, but
        # rather in the include section.
        # This is just how Github processes matrix jobs
        target:
          - esp32
          - esp32s2

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@v1
      with:
        esp_idf_version: v5.2
        target: ${{ matrix.target }}
        path: ./
        command: idf.py build

    - name: Rename build file
      run: |
        ls -l build
        sudo mv build/freertos-esp32-client.bin "build/freertos-esp32-client-${{ matrix.target }}_${{ needs.info.outputs.version }}.bin"

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
          name: tedge-freertos-esp32-client-${{ matrix.target }}_${{ needs.info.outputs.version }}
          path: build/freertos-esp32-client-${{ matrix.target }}*.bin

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - info
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: release
      - name: Show release artifacts
        run: ls -l release/*/*
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          generate_release_notes: true
          draft: true
          files: |
            ./release/*.bin
            ./release/*/*.bin
